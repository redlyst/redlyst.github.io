{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx",
    "path": "/work-documentation",
    "result": {"data":{"page":{"title":"Work Documentation","slug":"/work-documentation","excerpt":"This page contains my work troubleshoot nor work documentation SSH / Linux Commands How to ZIP Folder ZIP Folder exclude a specificâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Work Documentation\",\n  \"slug\": \"/work-documentation\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This page contains my work troubleshoot nor work documentation\"), mdx(\"h5\", null, \"SSH / Linux Commands\"), mdx(\"p\", null, \"How to ZIP Folder\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"zip -r filename.zip foldername\\n\")), mdx(\"p\", null, \"ZIP Folder exclude a specific subdirectory\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"zip -r filename.zip foldername -x \\\"fullpath/exclude/foldername1/*\\\" \\\"fullpath/exclude/foldername2/*\\\"\\n\")), mdx(\"p\", null, \"UNZIP Folder to the current directory\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"unzip filename.zip -d .\\n\")), mdx(\"p\", null, \"Delete All Files starting with 'myfile' and ending in '.txt'\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"rm myFile*.txt\\n\")), mdx(\"p\", null, \"Delete a whole folder\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"rm -rf foldername/\\n\")), mdx(\"p\", null, \"Delete all files/folders in the current directory, without deleting the directory itself\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"rm -rf *\\n\")), mdx(\"p\", null, \"Find a certain file in the whole server\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"whereis filename `or` which filename\\n\")), mdx(\"p\", null, \"or\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"which filename\\n\")), mdx(\"p\", null, \"Copy file\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"cp filename filecopy\\n\")), mdx(\"p\", null, \"Source & Reference : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.siteground.com/tutorials/ssh/\"\n  }, \"https://www.siteground.com/tutorials/ssh/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.hostinger.com/tutorials/ssh/basic-ssh-commands\"\n  }, \"https://www.hostinger.com/tutorials/ssh/basic-ssh-commands\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cyberciti.biz/faq/linux-howto-unzip-files-in-root-directory/\"\n  }, \"https://cyberciti.biz/faq/linux-howto-unzip-files-in-root-directory/\"))), mdx(\"p\", null, \"Print out the last 10 lines \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"tailif filelog\\n\")), mdx(\"p\", null, \"Source & Reference : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.commandlinux.com/man-page/man1/tailf.1.html\"\n  }, \"https://www.commandlinux.com/man-page/man1/tailf.1.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://kb.iu.edu/d/abdb\"\n  }, \"https://kb.iu.edu/d/abdb\"))), mdx(\"p\", null, \"Rename Folder \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"mv oldfolder newfolder\\n\")), mdx(\"p\", null, \"or use full path\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"mv /home/oldfolder /home/newfolder\\n\")), mdx(\"p\", null, \"Source & Reference : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.cyberciti.biz/faq/linux-rename-folder-command/\"\n  }, \"https://www.cyberciti.biz/faq/linux-rename-folder-command/\"))), mdx(\"hr\", null), mdx(\"h5\", null, \".HTACCESS Tutorials\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Disable Directory Listing Using .htaccess\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers:title=.htaccess\"\n  }, \"Options -Indexes\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enable .htaccess in httpd.conf or apache.conf\")), mdx(\"p\", null, \"Change AllowOverride line\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-:title=httpd.conf\",\n    \"metastring\": \"{2}\",\n    \"{2}\": true\n  }, \"<Directory \\\"/var/www/htdocs\\\">\\n    AllowOverride None\\n\")), mdx(\"p\", null, \"to\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-:title=httpd.conf\",\n    \"metastring\": \"{2}\",\n    \"{2}\": true\n  }, \"<Directory \\\"/var/www/htdocs\\\">\\n    AllowOverride All\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Forcing HTTPS on All Traffic\")), mdx(\"p\", null, \"One of the many functions you can perform via .htaccess is the 301 redirects, which permanently redirects an old URL to a new one. You can activate the feature to force HTTPS on all incoming traffic by following these steps:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-:title=.htaccess\"\n  }, \"RewriteEngine On \\nRewriteCond %{HTTPS} off \\nRewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Forcing HTTPS on a Specific Domain\")), mdx(\"p\", null, \"Let\\u2019s say that you have two domains: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://yourdomain1.com\"\n  }, \"http://yourdomain1.com\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://yourdomain2.com.\"\n  }, \"http://yourdomain2.com.\"), \" Both domains access the same website, but you only want the first one to be redirected to the HTTPS version. In this case, you need to use the following code:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-:title=.htaccess\"\n  }, \"RewriteEngine On \\nRewriteCond %{HTTP_HOST} ^yourdomain1.com [NC] \\nRewriteCond %{HTTPS} off \\nRewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Forcing HTTPS on a Specific Folder\")), mdx(\"p\", null, \"The .htaccess file can also be used to force HTTPS on specific folders. However, the file should be placed in the folder that will have the HTTPS connection.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-:title=.htaccess\"\n  }, \"RewriteEngine On \\nRewriteCond %{HTTPS} off \\nRewriteRule ^(folder1|folder2|folder3) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\\n\")), mdx(\"p\", null, \"Source & References : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.simplified.guide/apache/disable-directory-listing\"\n  }, \"https://www.simplified.guide/apache/disable-directory-listing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.bolt.cm/4.0/howto/making-sure-htaccess-works\"\n  }, \"https://docs.bolt.cm/4.0/howto/making-sure-htaccess-works\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.hostinger.com/tutorials/ssl/forcing-https\"\n  }, \"https://www.hostinger.com/tutorials/ssl/forcing-https\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://linuxize.com/post/redirect-http-to-https-in-apache/\"\n  }, \"https://linuxize.com/post/redirect-http-to-https-in-apache/\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/work-documentation"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}